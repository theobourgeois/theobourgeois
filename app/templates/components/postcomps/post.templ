package postcomps

import "strconv"
import "theobourgeois.com/app/models/postmodel"
import "fmt"

templ CreatePost() {
	<div id="form-container">
		<form
			hx-on::after-request="this.reset()"
			class="flex flex-col gap-2 p-4 rounded-md border-gray-700 border bg-gray-50 dark:bg-gray-900"
			hx-post="/api/posts"
			hx-target="#posts"
			hx-swap="innerHTML"
		>
			<p class="text-4xl dark:text-white font-semibold">Create a post </p>
			<input
				type="text"
				name="name"
				placeholder="Name your post"
				required
				class="border border-gray-800 dark:border-gray-600 dark:bg-gray-800 rounded-md px-2 py-1 dark:text-white"
			/>
			<textarea
				name="body"
				required
				placeholder="Write your post"
				class="border border-gray-800 dark:border-gray-600 dark:bg-gray-800 rounded-md px-2 py-1 dark:text-white"
			></textarea>
			<button
				type="submit"
				class="w-fit border-blue-600 border bg-blue-500 text-white rounded-md hover:bg-blue-600 px-2 py-1"
			>Create Post</button>
		</form>
	</div>
}

templ Posts(posts []*postmodel.Post) {
	<div class="flex flex-col gap-2">
		for _, post := range posts {
			@Post(post)
		}
	</div>
}

templ Post(post *postmodel.Post) {
	<div
		id={ "post-container" + strconv.Itoa(post.Id) }
		class="dark:bg-gray-900 dark:text-white bg-gray-50 flex items-center p-4 rounded-md border border-gray-700 justify-between"
	>
		<div>
			<div class="flex items-center gap-2">
				<a href={ templ.URL(fmt.Sprintf("/posts/%d", post.Id)) } class="text-2xl font-semibold hover:underline">{ post.Title }</a>
				<p>Created { post.CreatedAt.Format("2006-01-02") }</p>
			</div>
			<p>{ post.Body }</p>
		</div>
		<div class="flex items-center gap-2">
			<button
				class="bg-blue-500 hover:bg-blue-600 text-white px-2 py-1 rounded-md"
				hx-patch={ fmt.Sprintf("api/posts/%d?editing=true", post.Id) }
				hx-swap="outerHTML"
				hx-target={ fmt.Sprintf("#post-container%d", post.Id) }
				hx-trigger="click"
			>
				Edit
			</button>
			<button
				class="bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
				hx-delete={ fmt.Sprintf("api/posts/%d", post.Id) }
				hx-swap="innerHTML"
				hx-target="#posts"
				hx-trigger="click"
			>Delete</button>
		</div>
	</div>
}

templ EditPost(post *postmodel.Post) {
	<div
		id={ "edit-post-container" + strconv.Itoa(post.Id) }
	>
		<form
			class="dark:bg-gray-900 bg-gray-50 dark:text-white gap-2 flex-col flex p-4 rounded-md border border-gray-700"
			hx-put={ fmt.Sprintf("api/posts/%d", post.Id) }
			hx-target={ fmt.Sprintf("#edit-post-container%d", post.Id) }
			hx-swap="outerHTML"
		>
			<p class="dark:text-white text-4xl font-semibold">Edit post</p>
			<input
				autofocus
				value={ post.Title }
				required
				type="text"
				name="name"
				onfocus="this.setSelectionRange(this.value.length,this.value.length);"
				class="border w-full dark:border-gray-600 border-gray-800 dark:bg-gray-800 rounded-md px-2 py-1"
			/>
			<textarea
				required
				name="body"
				class="border w-full h-max dark:border-gray-600 border-gray-800 dark:bg-gray-800 rounded-md px-2 py-1"
			>
				{ post.Body }
			</textarea>
			<div class="flex place-content-end items-center gap-2">
				<button
					class="bg-slate-100 hover:bg-slate-200 px-2 py-1 rounded-md dark:text-black"
					hx-patch={ fmt.Sprintf("api/posts/%d?editing=false", post.Id) }
					hx-target={ fmt.Sprintf("#edit-post-container%d", post.Id) }
					hx-swap="outerHTML"
					hx-trigger="click"
				>Cancel</button>
				<button
					type="submit"
					class="w-fit bg-blue-500 text-white rounded-md hover:bg-blue-600 px-2 py-1"
				>Save</button>
			</div>
		</form>
	</div>
}
